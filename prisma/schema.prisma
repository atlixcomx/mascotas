generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Perrito {
  id                 String                @id @default(cuid())
  nombre             String
  slug               String                @unique
  fotos              String
  fotoPrincipal      String
  edad               String
  tamano             String
  raza               String
  sexo               String
  peso               Float?
  historia           String
  fechaIngreso       DateTime
  procedencia        String?
  vacunas            Boolean               @default(false)
  esterilizado       Boolean               @default(false)
  desparasitado      Boolean               @default(false)
  saludNotas         String?
  energia            String
  aptoNinos          Boolean               @default(false)
  aptoPerros         Boolean               @default(false)
  aptoGatos          Boolean               @default(false)
  caracter           String
  estado             String                @default("disponible")
  destacado          Boolean               @default(false)
  vistas             Int                   @default(0)
  createdAt          DateTime              @default(now())
  updatedAt          DateTime              @updatedAt
  adoptanteNombre    String?
  adoptanteTelefono  String?
  codigo             String                @unique
  fechaAdopcion      DateTime?
  responsableIngreso String?
  tipoIngreso        String
  expedienteMedico   ExpedienteMedico[]
  notas              NotaPerrito[]
  seguimientos       SeguimientoAdopcion[]
  solicitudes        Solicitud[]
}

model Solicitud {
  id              String                @id @default(cuid())
  codigo          String                @unique
  perritoId       String
  nombre          String
  edad            Int
  telefono        String
  email           String
  direccion       String
  ciudad          String
  codigoPostal    String
  tipoVivienda    String
  tienePatio      Boolean
  experiencia     String
  otrasMascotas   String?
  motivoAdopcion  String
  ineUrl          String?
  comprobanteUrl  String?
  estado          String                @default("nueva")
  fechaRevision   DateTime?
  fechaEntrevista DateTime?
  fechaPrueba     DateTime?
  inicioPrueba    DateTime?
  finPrueba       DateTime?
  fechaAdopcion   DateTime?
  motivoRechazo   String?
  origenQR        String?
  utmSource       String?
  utmMedium       String?
  utmCampaign     String?
  copiaIneRecibida        Boolean   @default(false)
  copiaComprobanteRecibida Boolean   @default(false)
  createdAt       DateTime              @default(now())
  updatedAt       DateTime              @updatedAt
  notas           NotaSolicitud[]
  seguimientos    SeguimientoAdopcion[]
  perrito         Perrito               @relation(fields: [perritoId], references: [id])
}

model Comercio {
  id            String    @id @default(cuid())
  codigo        String    @unique
  nombre        String
  slug          String    @unique
  categoria     String
  logo          String?
  descripcion   String
  direccion     String
  telefono      String
  email         String?
  website       String?
  horarios      String
  servicios     String
  restricciones String?
  certificado   Boolean   @default(false)
  fechaCert     DateTime?
  latitud       Float?
  longitud      Float?
  qrEscaneos    Int       @default(0)
  conversiones  Int       @default(0)
  activo        Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  qrScans       QrScan[]
}

model Usuario {
  id        String    @id @default(cuid())
  email     String    @unique
  nombre    String
  password  String
  rol       String    @default("admin")
  activo    Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  accounts  Account[]
  sessions  Session[]
}

model NotaPerrito {
  id        String   @id @default(cuid())
  perritoId String
  contenido String
  autor     String
  tipo      String
  createdAt DateTime @default(now())
  perrito   Perrito  @relation(fields: [perritoId], references: [id])
}

model NotaSolicitud {
  id          String    @id @default(cuid())
  solicitudId String
  contenido   String
  autor       String
  tipo        String
  createdAt   DateTime  @default(now())
  solicitud   Solicitud @relation(fields: [solicitudId], references: [id])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              Usuario @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         Usuario  @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model ExpedienteMedico {
  id            String       @id @default(cuid())
  perritoId     String
  tipo          String
  descripcion   String
  fecha         DateTime
  veterinario   String?
  veterinariaId String?
  vacunaTipo    String?
  proximaDosis  DateTime?
  medicamento   String?
  dosis         String?
  duracion      String?
  documentos    String?
  costo         Float?
  notas         String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  perrito       Perrito      @relation(fields: [perritoId], references: [id])
  veterinaria   Veterinaria? @relation(fields: [veterinariaId], references: [id])
}

model Veterinaria {
  id          String             @id @default(cuid())
  nombre      String
  direccion   String
  telefono    String
  email       String?
  contacto    String?
  convenio    Boolean            @default(false)
  descuento   Float?
  activa      Boolean            @default(true)
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  expedientes ExpedienteMedico[]
}

model SeguimientoAdopcion {
  id              String     @id @default(cuid())
  perritoId       String
  solicitudId     String?
  tipo            String
  fecha           DateTime
  realizado       Boolean    @default(false)
  contactado      Boolean?
  respuesta       String?
  estadoMascota   String?
  fotos           String?
  observaciones   String?
  responsable     String?
  proximoContacto DateTime?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  perrito         Perrito    @relation(fields: [perritoId], references: [id])
  solicitud       Solicitud? @relation(fields: [solicitudId], references: [id])
}

model Evento {
  id          String   @id @default(cuid())
  nombre      String
  tipo        String
  descripcion String
  fecha       DateTime
  horaInicio  String
  horaFin     String
  lugar       String
  direccion   String
  asistentes  Int?     @default(0)
  adopciones  Int?     @default(0)
  perritosIds String?
  estado      String   @default("programado")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Insumo {
  id          String             @id @default(cuid())
  categoria   String
  nombre      String
  descripcion String?
  unidad      String
  stockActual Float              @default(0)
  stockMinimo Float              @default(0)
  activo      Boolean            @default(true)
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  movimientos MovimientoInsumo[]
}

model MovimientoInsumo {
  id           String   @id @default(cuid())
  insumoId     String
  tipo         String
  cantidad     Float
  motivo       String
  perritoId    String?
  destinatario String?
  responsable  String
  notas        String?
  fecha        DateTime
  createdAt    DateTime @default(now())
  insumo       Insumo   @relation(fields: [insumoId], references: [id])
}

model CampaniaDifusion {
  id            String         @id @default(cuid())
  codigo        String         @unique
  nombre        String
  ubicacion     String
  tipo          String
  utm_source    String
  utm_medium    String         @default("qr_code")
  utm_campaign  String
  descripcion   String?
  activa        Boolean        @default(true)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  visitas       VisitaCampania[]
}

model VisitaCampania {
  id           String            @id @default(cuid())
  campaniaId   String
  ipAddress    String?
  userAgent    String?
  referer      String?
  createdAt    DateTime          @default(now())
  campania     CampaniaDifusion  @relation(fields: [campaniaId], references: [id])
}

model QrScan {
  id         String    @id @default(cuid())
  comercioId String
  ipAddress  String?
  userAgent  String?
  referer    String?
  timestamp  DateTime  @default(now())
  comercio   Comercio  @relation(fields: [comercioId], references: [id])
}
